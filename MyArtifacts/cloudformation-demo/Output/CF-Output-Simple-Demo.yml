AWSTemplateFormatVersion: 2010-09-09
# adding a mapping section for AMI value, based on user selection and the user login region AMI will be selected from the mapp
Mappings:
  MyRegionMap:
    us-east-2:
      DEV: ami-02ccb28830b645a41  
    ap-south-1:
      DEV: ami-0217a85e28e625474 
    us-east-2:
      PROD: ami-02ccb28830b645a41  
    ap-south-1:
      PROD: ami-0217a85e28e625474     

Parameters:
  EnviromentName:
    Description: Select Environment
    Type: String
    Default : DEV
    AllowedValues:
      - DEV 
      - PROD

Conditions:
  CreateSSHSecurityGroup: !Equals [!Ref EnviromentName, PROD]
  IfEnviromentNameIsPROD: !Equals [!Ref EnviromentName, PROD]

Resources:
  DevEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap
        - MyRegionMap
        - !Ref 'AWS::Region'
        - !Ref EnviromentName
      InstanceType: t2.micro
      KeyName: cnf-key-1
      SecurityGroups:
       - default
       - !If [IfEnviromentNameIsPROD, !Ref SSHSecurityGroup, !Ref TCPSecurityGroup]
       # !If [IfEnviromentNameIsPROD, !Ref SSHSecurityGroup, !Ref AWS::NoValue]

  SSHSecurityGroup: 
    Type: 'AWS::EC2::SecurityGroup'
    Properties: 
      GroupDescription: Allowing SSH connetivity
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0

  TCPSecurityGroup: 
    Type: 'AWS::EC2::SecurityGroup'
    Properties: 
      GroupDescription: Allowing TCP connetivity
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0   


#Output section 
Outputs:
  InstanceID:
    Description: New Instance ID 
    Value: !Ref DevEC2Instance
