AWSTemplateFormatVersion: "2010-09-09"
Description : Base template for creating EC2 instance 

#Parameters
Parameters:
  KeyName:
    Description : KeyName Parameter value 
    Type: AWS::EC2::KeyPair::KeyName



#Resources section 
Resources:
  CICDDemoEc2InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect : Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action: 
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName:  CICDDemoEc2InstancePolicyForS3  # Policy for S3 access 
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:Get*'
                  - 's3:List*'
                Resource: '*'
  CICDDemoEc2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref CICDDemoEc2InstanceRole


  HTTPSecurityGroup: 
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allowing HTTP , HTTPS and SSH connetivity from open internet 
      SecurityGroupIngress: 
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0  # HTTPS access 
      - IpProtocol: tcp
        FromPort: '8080'
        ToPort: '8080'
        CidrIp: 0.0.0.0/0  # HTTP access  
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0  # SSH access  
    
  StageEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-0d9462a653c34dab7
      InstanceType: t2.micro
      KeyName: ec2-key-pair-001
      SecurityGroups:
       - !Ref HTTPSecurityGroup # Using Ref Intrinsic Function one can refer another resource
      IamInstanceProfile: !Ref CICDDemoEc2InstanceProfile
      Tags:
        - Key: Name
          Value: StageEC2Instance
        - Key: Environment
          Value: Stage  
      UserData: 
        Fn::Base64: 
          !Sub  | 
          #!/bin/bash -xe
          sudo yum update -y
          sudo yum install -y ruby > /tmp/ruby.install.log
          sudo yum install -y wget > /tmp/wget.install.log
          sudo yum erase -y  java-1.7.0-openjdk.x86_64 > /tmp/jdk.unstall.log
          sudo yum install -y  java-1.8.0-openjdk.x86_64 > /tmp/jre.install.log
          sudo yum install -y  java-1.8.0-openjdk-devel > /tmp/jdk.install.log
          sudo yum install -y  tomcat > /tmp/tomcat.install.log
          cd /home/ec2-user
          wget https://aws-codedeploy-ap-south-1.s3.ap-south-1.amazonaws.com/latest/install
          chmod +x ./install
          sudo sudo ./install auto
          wget https://cloudformation-demo-resource-25022020.s3.ap-south-1.amazonaws.com/HelloWorld.war 
          chmod 755 HelloWorld.war
          cp HelloWorld.war /var/lib/tomcat/webapps
          sudo service tomcat start 

  ProdEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-0d9462a653c34dab7
      InstanceType: t2.micro
      KeyName: ec2-key-pair-001
      SecurityGroups:
       - !Ref HTTPSecurityGroup # Using Ref Intrinsic Function one can refer another resource
      IamInstanceProfile: !Ref CICDDemoEc2InstanceProfile
      Tags:
        - Key: Name
          Value: StageEC2Instance
        - Key: Environment
          Value: Prod  
      UserData: 
        Fn::Base64: 
          !Sub  | 
          #!/bin/bash -xe
          sudo yum update -y
          sudo yum install -y ruby > /tmp/ruby.install.log
          sudo yum install -y wget > /tmp/wget.install.log
          sudo yum erase -y  java-1.7.0-openjdk.x86_64 > /tmp/jdk.unstall.log
          sudo yum install -y  java-1.8.0-openjdk.x86_64 > /tmp/jre.install.log
          sudo yum install -y  java-1.8.0-openjdk-devel > /tmp/jdk.install.log
          sudo yum install -y  tomcat > /tmp/tomcat.install.log
          cd /home/ec2-user
          wget https://aws-codedeploy-ap-south-1.s3.ap-south-1.amazonaws.com/latest/install
          chmod +x ./install
          sudo sudo ./install auto > /tmp/codedeploy.install.log
          wget https://cloudformation-demo-resource-25022020.s3.ap-south-1.amazonaws.com/HelloWorld.war 
          chmod 755 HelloWorld.war
          cp HelloWorld.war /var/lib/tomcat/webapps
          sudo service tomcat start 




Outputs:
  StageApplicationURL:
    Description: Application URL for Stage Instance 
    Value : !Sub "http://${StageEC2Instance.PublicDnsName}:8080/HelloWorld/HelloWorld.html"
  ProdApplicationURL:
    Description: Application URL for Prod Instance 
    Value : !Sub "http://${ProdEC2Instance.PublicDnsName}:8080/HelloWorld/HelloWorld.html"  

###